#include <bits/stdc++.h>
using namespace std;

int linha, coluna;

vector<vector<char>> M;

const vector<pair<int, int>> delta{
  {-1, 0}, // cima
  {+1, 0}, // baixo
  {0, +1}, // direita
  {0, -1}  // esquerda
};

bool dentro(int novo_x, int novo_y) {
  if(novo_x < 0 || novo_x > linha - 1) return 0;
  if(novo_y < 0 || novo_y > coluna - 1) return 0;
  return 1;
}

int bfs(pair<int, int> inicio, pair<int, int> final) {
  queue<pair<int, int>> Q;
  vector<vector<int>> visitados(linha, vector<int>(coluna, -1));
  Q.push(inicio);
  visitados[inicio.first][inicio.second] = 0;
  while(!Q.empty()) { 
    pair<int, int> atual = Q.front(); 
    Q.pop();
    int a = atual.first, b = atual.second;
    for(int i = 0; i < 4; i++) {
      pair<int, int> aux = delta[i];
      int novo_x = a + aux.first;
      int novo_y = b + aux.second;
      if(dentro(novo_x, novo_y) && (M[novo_x][novo_y] == '.' || M[novo_x][novo_y] == 'G') 
      && visitados[novo_x][novo_y] == -1) {
        visitados[novo_x][novo_y] = visitados[a][b] + 1, Q.push({novo_x, novo_y});
      }
    }
  }
  return visitados[final.first][final.second];
}

int main() {
    cin>>linha>>coluna;
    pair<int, int> inicio;
    pair<int, int> final;
    M = vector<vector<char>> (linha, vector<char>(coluna, 0));
    for(int l=0; l<linha; l++){
        for(int c=0; c<coluna; c++){
            cin>>M[l][c];
            if(M[l][c]=='S'){
                inicio.first=l;
                inicio.second=c;
            }
            if(M[l][c]=='G'){
                final.first=l;
                final.second=c;
            }
        }
    }
    for(int l=0; l<linha; l++){
        for(int c=0; c<coluna; c++){
            if(M[l][c]=='v'){
              for(int i=l+1; i<linha && (M[i][c]=='.' or M[i][c]=='!');i++) M[i][c] = '!';
            }
            if(M[l][c]=='^'){
              for(int i=l-1; i>=0 && (M[i][c]=='.' or M[i][c]=='!');i--) M[i][c] = '!';
            }
            if(M[l][c]=='>'){
              for(int i=c+1; i<coluna && (M[l][i]=='.' or M[l][i]=='!');i++) M[l][i] = '!';
            }
            if(M[l][c]=='<'){
              for(int i=c-1; i>=0 && (M[l][i]=='.' or M[l][i]=='!');i--) M[l][i] = '!';
            }
        }
    }

    /*
    cout << "Matriz" << '\n';
    for(int i = 0; i < linha; i++) {
        for(int j = 0; j < coluna; j++) {
            cout << M[i][j] << ' ';
        }
        cout << '\n';
    }*/

    cout << bfs(inicio, final) << endl; 
}
